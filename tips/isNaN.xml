<article>
    <title>Wartość NaN</title>
    <author>varjs</author>
    <author_url>http://twitter.com/varjs</author_url>
    <date>2013-05-22</date>
    <content>
        <p>Często w wyniku operacji arytmetycznych otrzymujemy wynik o wartości <code>NaN</code>. Skrót pochodzi od wyrażenia <em>not a number</em>. Wartość tę możemy dostać na przykład poprzez podzielenie liczby przez stringa:</p>
        <pre><code>var i = 10;
var result = i / "foobar";
console.log(result); // NaN</code></pre>
        <p>Jak więc sprawdzić, czy rezultalt to NaN, by uniknąć dalszych błędów w aplikacji? Można użyć funkcji <code>isNaN</code>:</p>
        <pre><code>isNaN(result); // true</code></pre>
		<p>Jest to problematyczne, o ile weźmiemy pod uwagę, że sprawdzana wartość będzie czymś innym niż <code>NaN</code>:</p>
		<pre><code>isNaN({}); // true</code></pre>
		<p>Można temu zaradzić definiując własną funkcję do sprawdzenia, czy zmienna to <code>NaN</code>. Otóż warto zauważyć, że <code>NaN</code> jako jedyna wartość nie daje prawdy przy porównaniu do samej siebie:</p>
		<pre><code>result === result; // false</code></pre>
		<p>Na tej podstawie konstruujemy własną funkcję sprawdzającą, alternatywną do <code>isNaN</code>:</p>
		<pre><code>var customIsNaN = function(i) {
	return i !== i;
}</code></pre>
    </content>
</article>